@using ControlGallery.Models
@using System.Diagnostics

@page "/pickerplayground"

<ContentView>
    <StackLayout>
        <Label Text="Picker Playground">
        </Label>
        <Label Text="Picker with models and all display properties"/>
        <Picker
            CharacterSpacing="3"
            FontAttributes="@FontAttributes.Bold"
            FontFamily="MarkerFelt-Thin"
            FontSize="20"
            HorizontalTextAlignment="@TextAlignment.Center"
            TextColor="@Color.Red"
            ItemsSource="Models"
            Title="Select a model"
            TitleColor="@Color.Blue"
            VerticalTextAlignment="@TextAlignment.End"
            ItemDisplayBinding="Name"
            @bind-SelectedItem="SelectedModel"
        >
        </Picker>
        <Label Text="@(SelectedModel?.Name ?? "Select a model")"></Label>
        
        <Label Text="Picker with string"/>
        <Picker
            @bind-SelectedItem="SelectedString"
            Title="Select a string"
            ItemsSource="Strings"/>

        <Label Text="@(SelectedString ?? "Select a string")"></Label>

        <Label Text="Picker with models and default item selected"/>
        <Picker
            @bind-SelectedItem="SelectedModelDefault"
            Title="Select a model"
            ItemDisplayBinding="Name"
            ItemsSource="ModelsWithDefault"/>
        <Label Text="@(SelectedModelDefault?.Name ?? "Select a model")"></Label>

        <Label Text="Picker that can be null"/>
        <Picker
            ItemsSource="ModelsWithNull"
            Title="Select a model or nothing"
            ItemDisplayBinding="Name"
            @bind-SelectedItem="SelectedModelWithNull"
        >
        </Picker>
        <Label Text="@(SelectedModelWithNull?.Name ?? "Select a model")"></Label>

        <Label Text="Index Based Picker"/>
        <Picker
            ItemsSource="Models"
            Title="Select a model and the index will bind"
            ItemDisplayBinding="Name"
            @bind-SelectedIndex="SelectedIndex"
        >
        </Picker>
        <Label Text="@(Models.ElementAtOrDefault(SelectedIndex)?.Name ?? "Select a model")"></Label>



        <Button Text="Set pickers from code" OnClick="ButtonClicked"></Button>
    </StackLayout>
</ContentView>

@code 
{
    
    public Model SelectedModel { get; set; }    public int SelectedIndex { get; set; } = -1;

    public List<Model> Models { get; set; } = new List<Model>
    {
        new Model{Name = "Model 1"},
        new Model{Name = "Model 2"},
        new Model{Name = "Model 3"},
    };

    public string SelectedString     {           get;            set;     } 
    public List<string> Strings { get; set; } = new List<string>
    {
        "String 1",
        "String 2",
        "String 3",
    };

    static Model defaultModel = new Model{Name = "Default Model"};
    public Model SelectedModelDefault {get;set;} = defaultModel;

    public List<Model> ModelsWithDefault {get;set;} = new List<Model>
    {
        new Model{Name = "Model 1"},
        new Model{Name = "Model 2"},
        defaultModel,
        new Model{Name = "Model 3"},
    };

    public Model SelectedModelWithNull {get;set;}

    public List<Model> ModelsWithNull {get;set;} = new List<Model>
    {
        null,
        new Model{Name = "Model 1"},
        new Model{Name = "Model 2"},
        new Model{Name = "Model 3"},
    };

    public void ButtonClicked()
    {
        SelectedModel = Models.LastOrDefault();
        SelectedString = Strings.LastOrDefault();
        SelectedModelDefault = ModelsWithDefault.LastOrDefault();
        SelectedModelWithNull = null;
        SelectedIndex = 2;
    }
}

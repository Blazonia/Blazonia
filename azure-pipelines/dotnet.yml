steps:

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: src/**/*.csproj
    restoreDirectory: 
    workingDirectory: 
    arguments: --no-restore /v:m /bl:"$(Build.ArtifactStagingDirectory)/build_logs/build.binlog" /p:Configuration=$(BuildConfiguration)

- task: MSBuild@1
  inputs:
    msbuildArguments: /t:pack /p:NoBuild=true
    solution: 'src/**/*.csproj' 
    configuration: '$(BuildConfiguration)'

- task: PowerShell@2
  inputs:
    filePath: azure-pipelines/variables/_pipelines.ps1
    failOnStderr: true
  displayName: Update pipeline variables based on build outputs
  condition: succeededOrFailed()

- task: PowerShell@2
  inputs:
    filePath: azure-pipelines/artifacts/_pipelines.ps1
    arguments: -ArtifactNameSuffix "-$(Agent.JobName)"
  displayName: Publish artifacts
  condition: succeededOrFailed()

- task: NuGetCommand@2
  displayName: 'NuGet push'
  inputs:
    command: push
    publishVstsFeed: 'Emblazon'
    allowPackageConflicts: true

- task: PublishSymbols@2
  inputs:
    SymbolsFolder: $(Build.ArtifactStagingDirectory)/symbols-Windows
    SearchPattern: '**/*.pdb'
    IndexSources: false
    SymbolServerType: TeamServices
  displayName: Publish symbols to symbol server
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Agent.OS'], 'Windows_NT'))

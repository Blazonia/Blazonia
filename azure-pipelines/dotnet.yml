steps:

- script: msbuild /t:build /p:RestorePackages=false -c $(BuildConfiguration) /v:m /bl:"$(Build.ArtifactStagingDirectory)/build_logs/build.binlog"
  displayName: msbuild /t:build
  workingDirectory: .

- script: msbuild /t:pack /p:RestorePackages=false -c $(BuildConfiguration) /v:m /bl:"$(Build.ArtifactStagingDirectory)/build_logs/pack.binlog"
  displayName: msbuild /t:pack
  workingDirectory: .

#- task: DotNetCoreCLI@2
#  displayName: dotnet test -f net472
#  inputs:
#    command: test
#    arguments: --no-build -c $(BuildConfiguration) -f net472 --filter "TestCategory!=FailsInCloudTest" -v n
#    testRunTitle: net472-$(Agent.JobName)
#    workingDirectory: .
#  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))

#- task: DotNetCoreCLI@2
#  displayName: dotnet test -f netcoreapp2.1
#  inputs:
#    command: test
#    arguments: --no-build -c $(BuildConfiguration) -f netcoreapp2.1 --filter "TestCategory!=FailsInCloudTest" -v n
#    testRunTitle: netcoreapp2.1-$(Agent.JobName)
#    workingDirectory: .

#- task: DotNetCoreCLI@2
#  displayName: dotnet test -f netcoreapp3.0
#  inputs:
#    command: test
#    arguments: --no-build -c $(BuildConfiguration) -f netcoreapp2.2 --filter "TestCategory!=FailsInCloudTest" -v n
#    testRunTitle: netcoreapp3.0-$(Agent.JobName)
#    workingDirectory: .

- task: PowerShell@2
  inputs:
    filePath: azure-pipelines/variables/_pipelines.ps1
    failOnStderr: true
  displayName: Update pipeline variables based on build outputs
  condition: succeededOrFailed()

- task: PowerShell@2
  inputs:
    filePath: azure-pipelines/artifacts/_pipelines.ps1
    arguments: -ArtifactNameSuffix "-$(Agent.JobName)"
  displayName: Publish artifacts
  condition: succeededOrFailed()

- task: PublishSymbols@2
  inputs:
    SymbolsFolder: $(Build.ArtifactStagingDirectory)/symbols-Windows
    SearchPattern: '**/*.pdb'
    IndexSources: false
    SymbolServerType: TeamServices
  displayName: Publish symbols to symbol server
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Agent.OS'], 'Windows_NT'))
